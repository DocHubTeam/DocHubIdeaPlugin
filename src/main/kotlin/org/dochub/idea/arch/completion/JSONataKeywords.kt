package org.dochub.idea.arch.completion

object JSONataKeywords {
     const val IN = "in"
     const val AND = "and"
     const val OR = "or"
     const val AT = "$"
     const val SELF = "\$self"
     const val FUNCTION = "function"
     val JSONATA_FUNCTIONS = listOf(
          "\$string()",
          "\$length()",
          "\$substring()",
          "\$substringBefore()",
          "\$substringAfter()",
          "\$uppercase()",
          "\$lowercase()",
          "\$trim()",
          "\$pad()",
          "\$contains()",
          "\$split()",
          "\$join()",
          "\$match()",
          "\$replace()",
          "\$eval()",
          "\$base64encode()",
          "\$base64decode()",
          "\$encodeUrlComponent()",
          "\$encodeUrl()",
          "\$decodeUrlComponent()",
          "\$decodeUrl()",
          "\$number()",
          "\$abs()",
          "\$floor()",
          "\$ceil()",
          "\$round()",
          "\$power()",
          "\$sqrt()",
          "\$random()",
          "\$formatNumber()",
          "\$formatBase()",
          "\$formatInteger()",
          "\$parseInteger()",
          "\$sum()",
          "\$max()",
          "\$min()",
          "\$average()",
          "\$boolean()",
          "\$not()",
          "\$exists()",
          "\$count()",
          "\$append()",
          "\$sort()",
          "\$reverse()",
          "\$shuffle()",
          "\$distinct()",
          "\$zip()",
          "\$keys()",
          "\$lookup()",
          "\$spread()",
          "\$merge()",
          "\$sift()",
          "\$each()",
          "\$error()",
          "\$assert()",
          "\$type()",
          "\$now()",
          "\$millis()",
          "\$fromMillis()",
          "\$toMillis()",
          "\$map()",
          "\$filter()",
          "\$single()",
          "\$reduce()",
          "\$sift()",
          "\$mergedeep()",
          "\$jsonschema()")
}
